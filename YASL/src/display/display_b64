#!../../ressources/yasl_linux

#!

{
	"Image received, nb pixels : " print print "\n" print
	"Found square : " print =:9 print "\n" print
} print_stats

{	// could be bugged for / 4 if approx
	=:2			// n char
	4:2 2:/:2	// n pixel
	1:3			// stockage
	1:4			// bool = true

	4:%@		// while (bool == true)
	(
		3:=:3			// 1 1
		3:%*:3			// 1 1 1
		2:=:3			// 1 1 1 1024
		3:%==:3			// (1 == 1024)
		3:?	(			// if (square == char) bool == 0
			0:4				// bool = false
			3:!
			3:print_stats:3
		) : (				// else
			3:%>:3			// (1 > 1024)
			? 0:("not square\n" print 0 exit):0	// error
			3:!!!			// 1
			1:3				// 1 1
			3:+:3			// 1 + 1 = 2	// i++
		)
	)
	2:!
} is_square

{
	""
	read
	@(
		+
		read
	)
	!
} open

open

[#]
0:is_square

!
//print

"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/":6

{
	6:%][:7					// take 0-63 table
	7:!						// pop count
	64:5					// int	i = 64
	1:8						// bool	b = true
	8:%@(					// while b == true
		1:5 5:-:5			// i--
		0:=:7 7:==:7 7:?	// if (table[i] == 'char')
		(
			5:=:1			// push i on s1
			0:8				// b = false
		) : (				// else
		5:=:5 0:5 5:==:5 5:?						// if (i == 0)
		0:("non base_64 char\n" print 0 exit):0 )	// error
	)
	0:! 8:! 8:!				// pop
	"":7 7:#:7 7:#!			// pop all s7
} convert_atob


][

#( 0:convert_atob:1 )

{
	18 <<:2
	12 <<:2
	6 <<:2
	0 <<:2

	2:( + + + ):2

	2:=
	2:!
} four_c_to_int

{
	255 %&:0 !
	255 8 << %&:0 ! 8:0 0:>>:0
	255 16 << %&:0 ! 16:0 0:>>:0
} int_to_rgb

{
	9:(16 36 0:= 0:! 6 * 256 / *
		6 0:= 0:! 6 * 256 / *
		0:= 0:! 6 * 256
		/ + + + =:0 9:!):9

} scale_down

1:(
	0:8
	# 4 / #(

		1:four_c_to_int:1

		1:int_to_rgb:1

		0:scale_down:0
		
		9:("\e[48:5:" (0:= 0:! "" +) + "m  " + print):9
		8:(1 + = 9:= == ? ("\e[0m\n" print # #! 0)):8
		
		1:!
	)
):1
